---
title: "Simple Linear Regression (SLR)"
author: "Nicky Wakim"
title-slide-attributes:
    data-background-color: "#213c96"
date: "01/17/2023"
categories: ["Week 1"]
format: 
  revealjs:
    theme: [default, simple_NW.scss]
    chalkboard: true
    slide-number: true
    show-slide-number: all
    width: 1955
    height: 1100
    footer: SLR 1
    html-math-method: mathjax
    highlight-style: ayu
execute:
  echo: true
  freeze: auto  # re-render only when source changes
editor: 
  markdown: 
    wrap: 72
---

```{r}
#| label: "setup" 
#| include: false
#| message: false
#| warning: false

library(tidyverse)    
library(openintro)
library(janitor)
library(rstatix)
library(knitr)
library(gtsummary)
library(moderndive)
library(gt)
library(broom) 
library(here) 
library(pwr) 
library(gridExtra) # NEW!!!

# terminal: for icons
# quarto install extension quarto-ext/fontawesome

# set ggplot theme for slides 
theme_set(theme_gray(base_size = 22))
# theme_update(text = element_text(size=16))  # set global text size for ggplots

```

# Learning Objectives

1.  Identify the aims of your research and see how they align with the
    intended purpose of simple linear regression

2.  Identify the simple linear regression model and define statistics
    language for key notation

3.  Illustrate how ordinary least squares (OLS) finds the best model
    parameter estimates

4.  Solve the optimal coefficient estimates for simple linear regression
    using OLS

5.  Apply OLS in R for simple linear regression of real data

## Let's start with an example

::: columns
::: {.column width="55%"}
```{r}
#| fig-height: 8
#| fig-width: 11
#| echo: false

gapm <- read_csv("data/lifeexp_femlit_2011.csv")
ggplot(gapm, aes(x = female_literacy_rate_2011,
                 y = life_expectancy_years_2011)) +
  geom_point(size = 4) +
  geom_smooth(method = "lm", se = FALSE, size = 3, colour="#F14124") +
  labs(x = "Female literacy rate (%)", 
       y = "Life expectancy (years)",
       title = "Relationship between life expectancy and \n the female literacy rate in 2011") +
    theme(axis.title = element_text(size = 30), 
        axis.text = element_text(size = 25), 
        title = element_text(size = 30))

```
:::

::: {.column width="45%"}
 

Average life expectancy vs. female literacy rate

 

-   Each point on the plot is for a different country

 

-   $X$ = country's adult female literacy rate

 

-   $Y$ = country's average life expectancy (years)
:::
:::

::: heq
$$\widehat{\text{life expectancy}} =  50.9 + 0.232\cdot\text{female literacy rate}$$
:::

## Reference: How did I code that? {.smaller}

![](pause.png){.absolute top="83%" right="0%" width="120" height="120"}

```{r}
#| fig-height: 6.5
#| fig-width: 10
#| fig-align: center

ggplot(gapm, aes(x = female_literacy_rate_2011,
                 y = life_expectancy_years_2011)) +
  geom_point(size = 4) +
  geom_smooth(method = "lm", se = FALSE, size = 3, colour="#F14124") +
  labs(x = "Female literacy rate (%)", 
       y = "Life expectancy (years)",
       title = "Relationship between life expectancy and \n the female literacy rate in 2011") +
    theme(axis.title = element_text(size = 30), 
        axis.text = element_text(size = 25), 
        title = element_text(size = 30))

```

## Dataset description

-   Data files

    -   Cleaned: `lifeexp_femlit_2011.csv`

    -   Needs cleaning: `lifeexp_femlit_water_2011.csv`

-   Data were downloaded from
    [Gapminder](https://www.gapminder.org/data/){.uri}

-   2011 is the most recent year with the most complete data

-   [**Life
    expectancy**](https://www.gapminder.org/data/documentation/gd004/) =
    the average number of years a newborn child would live if current
    mortality patterns were to stay the same.

-   [**Adult literacy rate**](http://data.uis.unesco.org/) is the
    percentage of people ages 15 and above who can, with understanding,
    read and write a short, simple statement on their everyday life.

## Get to know the data (1/2)

-   Load data

```{r}
gapm_original <- read_csv(here::here("data", "lifeexp_femlit_water_2011.csv"))
```

-   Glimpse of the data

```{r}
glimpse(gapm_original)
```

-   Note the missing values for our variables of interest

## Get to know the data (2/2)

-   Get a sense of the summary statistics

```{r}
gapm_original %>% 
  select(life_expectancy_years_2011, female_literacy_rate_2011) %>% 
  summary()
```

## Remove missing values (1/2)

-   Remove rows with missing data for life expectancy and female
    literacy rate

```{r}
gapm <- gapm_original %>% 
  drop_na(life_expectancy_years_2011, female_literacy_rate_2011)

glimpse(gapm)

```

-   No missing values now for our variables of interest

## Remove missing values (2/2)

-   And no more missing values when we look only at our two variables of
    interest

```{r}
gapm %>% select(life_expectancy_years_2011, female_literacy_rate_2011) %>% 
  get_summary_stats()
```

::: definition
::: def-title
Note
:::

::: def-cont
-   Removing the rows with missing data was not needed to run the
    regression model.
-   I did this step since later we will be calculating the standard
    deviations of the explanatory and response variables for *just the
    values included in the regression model*. It'll be easier to do this
    if we remove the missing values now.
:::
:::

## Poll Everywhere Question 1

# Learning Objectives

::: lob
1.  Identify the aims of your research and see how they align with the
    intended purpose of simple linear regression
:::

2.  Identify the simple linear regression model and define statistics
    language for key notation

3.  Illustrate how ordinary least squares (OLS) finds the best model
    parameter estimates

4.  Solve the optimal coefficient estimates for simple linear regression
    using OLS

5.  Apply OLS in R for simple linear regression of real data

## Questions we can ask with a simple linear regression model

::: columns
::: {.column width="50%"}
```{r}
#| fig-height: 8
#| fig-width: 11
#| echo: false

gapm <- read_csv("data/lifeexp_femlit_2011.csv")
ggplot(gapm, aes(x = female_literacy_rate_2011,
                 y = life_expectancy_years_2011)) +
  geom_point(size = 4) +
  geom_smooth(method = "lm", se = FALSE, size = 3, colour="#F14124") +
  labs(x = "Female literacy rate (%)", 
       y = "Life expectancy (years)",
       title = "Relationship between life expectancy and \n the female literacy rate in 2011") +
    theme(axis.title = element_text(
        size = 30), 
        axis.text = element_text(
        size = 25), 
        title = element_text(
        size = 30))

```
:::

::: {.column width="50%"}
-   How do we...
    -   calculate slope & intercept?
    -   interpret slope & intercept?
    -   do inference for slope & intercept?
        -   CI, p-value
    -   do prediction with regression line?
        -   CI for prediction?
-   Does the model fit the data well?
    -   Should we be using a line to model the data?
-   Should we add additional variables to the model?
    -   multiple/multivariable regression
:::
:::

::: heq
$$\widehat{\text{life expectancy}} =  50.9 + 0.232\cdot\text{female literacy rate}$$
:::

## Association vs. prediction

::: columns
::: {.column width="50%"}
::: proof1
::: proof-title
Association
:::

::: proof-cont
-   What is the association between countries’ life expectancy and
    female literacy rate?
-   Use the slope of the line or correlation coefficient
:::
:::
:::

::: {.column width="50%"}
::: definition
::: def-title
Prediction
:::

::: def-cont
-   What is the expected average life expectancy for a country with a
    specified female literacy rate?    
:::
:::
:::
:::

$$\widehat{\text{life expectancy}} =  50.9 + 0.232\cdot\text{female literacy rate}$$

```{r}
#| fig-height: 7
#| fig-width: 12
#| echo: false
#| fig-align: center

gapm <- read_csv("data/lifeexp_femlit_2011.csv")
ggplot(gapm, aes(x = female_literacy_rate_2011,
                 y = life_expectancy_years_2011)) +
  geom_point(size = 4) +
  geom_smooth(method = "lm", se = FALSE, size = 3, colour="#F14124") +
  labs(x = "Female literacy rate (%)", 
       y = "Life expectancy (years)",
       title = "Relationship between life expectancy and \n the female literacy rate in 2011") +
    theme(axis.title = element_text(
        size = 30), 
        axis.text = element_text(
        size = 25), 
        title = element_text(
        size = 30))

```

## Three types of study design (there are more)

::: columns
::: {.column width="33%"}
::: definition
::: def-title
Experiment
:::

::: def-cont
-   Observational units are randomly assigned to important predictor
    levels

    -   Random assignment controls for confounding variables (age,
        gender, race, etc.)

    -   “gold standard” for determining causality

    -   Observational unit is often at the participant-level
:::
:::
:::

::: {.column width="33%"}
::: example
::: ex-title
Quasi-experiment
:::

::: ex-cont
-   Participants are assigned to intervention levels without
    randomization

-   Not common study design
:::
:::
:::

::: {.column width="33%"}
::: proposition
::: prop-title
Observational
:::

::: prop-cont
-   No randomization or assignment of intervention conditions

-   In general cannot infer causality

    -   However, there are casual inference methods…
:::
:::
:::
:::

## Let's revisit the regression analysis process

   

![](images/arrow2.png){.absolute top="17%" right="63.15%" width="155"}
![](images/arrow2.png){.absolute top="17%" right="28.7%"
width="155"}![](images/arrow_back4.png){.absolute top="10%"
right="30.7%" width="840"}

::: columns
::: {.column width="30%"}
::: RAP1
::: RAP1-title
Model Selection
:::

::: RAP1-cont
-   Building a model

-   Prediction vs interpretation

-   Comparing models
:::
:::
:::

::: {.column width="4%"}
:::

::: {.column width="30%"}
::: RAP2
::: RAP2-title
Model Fitting
:::

::: RAP2-cont
-   Parameter estimation

-   Interpret model parameters

-   Hypothesis tests for coefficients

-   Categorical covariates

-   Interactions
:::
:::
:::

::: {.column width="4%"}
:::

::: {.column width="30%"}
::: RAP3
::: RAP3-title
Model Evaluation
:::

::: RAP3-cont
-   Evaluation of full and reduced models
-   Testing model assumptions
-   Residuals
-   Transformations
-   Influential points
-   Multicollinearity
:::
:::
:::
:::

## Poll Everywhere Question 2

# Learning Objectives

1.  Identify the aims of your research and see how they align with the
    intended purpose of simple linear regression

::: lob
2.  Identify the simple linear regression model and define statistics
    language for key notation
:::

3.  Illustrate how ordinary least squares (OLS) finds the best model
    parameter estimates

4.  Solve the optimal coefficient estimates for simple linear regression
    using OLS

5.  Apply OLS in R for simple linear regression of real data

## Simple Linear Regression Model

The (population) regression model is denoted by:

 

::: heq
$$Y =  \beta_0 + \beta_1X + \epsilon$$
:::

 

::: columns
::: column
#### Observable sample data

-   $Y$ is our dependent variable

    -   Aka outcome or response variable

-   $X$ is our independent variable

    -   Aka predictor, regressor, exposure variable
:::

::: column
#### Unobservable population parameters

-   $\beta_0$ and $\beta_1$ are **unknown** population parameters

-   $\epsilon$ (epsilon) is the error about the line

    -   It is assumed to be a random variable with a...

        -   Normal distribution with mean 0 and constant variance
            $\sigma^2$

        -   i.e. $\epsilon \sim N(0, \sigma^2)$
:::
:::

## Simple Linear Regression Model (another way to view components)

The (population) regression model is denoted by:

 

::: heq
$$Y =  \beta_0 + \beta_1X + \epsilon$$
:::

 

### Components

|            |                                            |
|------------|--------------------------------------------|
| $Y$        | response, outcome, dependent variable      |
| $\beta_0$  | intercept                                  |
| $\beta_1$  | slope                                      |
| $X$        | predictor, covariate, independent variable |
| $\epsilon$ | residuals, error term                      |

## If the population parameters are unobservable, how did we get the line for life expectancy?

::: columns
::: {.column width="40%"}
 

::: hl
Note: the **population model is the true, underlying model** that we are
trying to estimate using our sample data

-   Our goal in simple linear regression is to estimate $\beta_0$ and
    $\beta_1$
:::
:::

::: {.column width="60%"}
```{r}
#| fig-height: 8
#| fig-width: 11
#| echo: false
#| fig-align: center

gapm <- read_csv("data/lifeexp_femlit_2011.csv")
ggplot(gapm, aes(x = female_literacy_rate_2011,
                 y = life_expectancy_years_2011)) +
  geom_point(size = 4) +
  geom_smooth(method = "lm", se = FALSE, size = 3, colour="#F14124") +
  labs(x = "Female literacy rate (%)", 
       y = "Life expectancy (years)",
       title = "Relationship between life expectancy and \n the female literacy rate in 2011") +
    theme(axis.title = element_text(size = 30), 
        axis.text = element_text(size = 25), 
        title = element_text(size = 30))

```
:::
:::

## Poll Everywhere Question 3

## Okay, so how do we estimate the regression line?

 

At this point, we are going to move over to an R shiny app that I made.

 

Let's see if we can eyeball the best-fit line!

## Regression line = best-fit line

::: columns
::: {.column width="50%"}
$$\widehat{Y} = \widehat{\beta}_0 + \widehat{\beta}_1 X $$

-   $\widehat{Y}$ is the predicted outcome for a specific value of $X$
-   $\widehat{\beta}_0$ is the intercept *of the best-fit line*
-   $\widehat{\beta}_1$ is the slope *of the best-fit line*, i.e., the
    increase in $\widehat{Y}$ for every increase of one (unit increase)
    in $X$
    -   slope = *rise over run*
:::

::: {.column width="50%"}
```{r}
#| fig-height: 8
#| fig-width: 11
#| echo: false

gapm <- read_csv("data/lifeexp_femlit_2011.csv")
ggplot(gapm, aes(x = female_literacy_rate_2011,
                 y = life_expectancy_years_2011)) +
  geom_point(size = 4) +
  geom_smooth(method = "lm", se = FALSE, size = 3, colour="#F14124") +
  labs(x = "Female literacy rate (%)", 
       y = "Life expectancy (years)",
       title = "Relationship between life expectancy and \n the female literacy rate in 2011") +
    theme(axis.title = element_text(size = 30), 
        axis.text = element_text(size = 25), 
        title = element_text(size = 30))
```
:::
:::

## Simple Linear Regression Model

::: columns
::: {.column width="50%"}
#### Population regression *model*

::: lob
$$Y =  \beta_0 + \beta_1X + \epsilon$$
:::

 

##### Components

|            |                                            |
|------------|--------------------------------------------|
| $Y$        | response, outcome, dependent variable      |
| $\beta_0$  | intercept                                  |
| $\beta_1$  | slope                                      |
| $X$        | predictor, covariate, independent variable |
| $\epsilon$ | residuals, error term                      |
:::

::: {.column width="50%"}
#### Estimated regression *line*

::: hl
$$\widehat{Y} =  \widehat{\beta}_0 + \widehat{\beta}_1X$$
:::

 

##### Components

|                     |                                                   |
|---------------------|---------------------------------------------------|
| $\widehat{Y}$       | *estimated expected* response given predictor $X$ |
| $\widehat{\beta}_0$ | *estimated* intercept                             |
| $\widehat{\beta}_1$ | *estimated* slope                                 |
| $X$                 | predictor, covariate, independent variable        |
:::
:::

## We get it, Nicky! How do we estimate the regression line?

First let's take a break!!

# Learning Objectives

1.  Identify the aims of your research and see how they align with the
    intended purpose of simple linear regression

2.  Identify the simple linear regression model and define statistics
    language for key notation

::: lob
3.  Illustrate how ordinary least squares (OLS) finds the best model
    parameter estimates
:::

4.  Solve the optimal coefficient estimates for simple linear regression
    using OLS

5.  Apply OLS in R for simple linear regression of real data

## It all starts with a residual...

::: columns
::: {.column width="50%"}
-   Recall, one characteristic of our population model was that the
    residuals, $\epsilon$, were Normally distributed:
    $\epsilon \sim N(0, \sigma^2)$

-   In our population regression model, we had:
    $$Y =  \beta_0 + \beta_1X + \epsilon$$

-   We can also take the average (expected) value of the population
    model

-   We take the expected value of both sides and get:

$$\begin{aligned} 
        E[Y] & = E[\beta_0 + \beta_1X + \epsilon] \\
        E[Y] & = E[\beta_0] + E[\beta_1X] + E[\epsilon] \\
        E[Y] & = \beta_0 + \beta_1X + E[\epsilon] \\
        E[Y|X] & = \beta_0 + \beta_1X \\
\end{aligned}$$

-   We call $E[Y|X]$ the expected value of $Y$ given $X$
:::

::: {.column width="50%"}
![](03_SLR_01/OLSassumptions-1.png){fig-align="center"}
:::
:::

## So now we have two representations of our population model

::: columns
::: {.column width="50%"}
::: definition
::: def-title
With observed $Y$ values and residuals:
:::

::: def-cont
$$Y =  \beta_0 + \beta_1X + \epsilon$$
:::
:::
:::

::: {.column width="50%"}
::: fact
::: fact-title
With the population expected value of $Y$ given $X$:
:::

::: fact-cont
$$E[Y|X] = \beta_0 + \beta_1X$$
:::
:::
:::
:::

Using the two forms of the model, we can figure out a formula for our
residuals:

$$\begin{aligned}
Y & = (\beta_0 + \beta_1X) + \epsilon \\
Y & = E[Y|X] + \epsilon \\
Y - E[Y|X] & = \epsilon \\ 
\epsilon & = Y - E[Y|X]
\end{aligned}$$

And so we have our **true, population model**, residuals!

::: hl
This is an important fact! For the **population model**, the residuals:
$\epsilon = Y - E[Y|X]$
:::

## Back to our estimated model

We have the same two representations of our estimated/fitted model:

::: columns
::: {.column width="50%"}
::: definition
::: def-title
With observed values:
:::

::: def-cont
$$Y =  \widehat{\beta}_0 + \widehat{\beta}_1X + \widehat{\epsilon}$$
:::
:::
:::

::: {.column width="50%"}
::: fact
::: fact-title
With the estimated expected value of $Y$ given $X$:
:::

::: fact-cont
$$\begin{aligned} 
\widehat{E}[Y|X] & = \widehat{\beta}_0 + \widehat{\beta}_1X \\
\widehat{E[Y|X]} & = \widehat{\beta}_0 + \widehat{\beta}_1X \\
\widehat{Y} & = \widehat{\beta}_0 + \widehat{\beta}_1X \\
\end{aligned}$$
:::
:::
:::
:::

Using the two forms of the model, we can figure out a formula for our
estimated residuals:

$$\begin{aligned}
Y & = (\widehat{\beta}_0 + \widehat{\beta}_1X) + \widehat\epsilon \\
Y & = \widehat{Y} + \widehat\epsilon \\
\widehat\epsilon & = Y - \widehat{Y}
\end{aligned}$$

::: lob
This is an important fact! For the **estimated/fitted model**, the
residuals: $\widehat\epsilon = Y - \widehat{Y}$
:::

## *Individual* $i$ residuals in the estimated/fitted model

::: columns
::: {.column width="45%"}
-   **Observed values for each individual** $i$: $Y_i$
    -   Value in the dataset for individual $i$
-   **Fitted value for each individual** $i$: $\widehat{Y}_i$
    -   Value that falls on the best-fit line for a specific $X_i$
    -   If two individuals have the same $X_i$, then they have the same
        $\widehat{Y}_i$
:::

::: {.column width="55%"}
```{r}
#| message: false
#| echo: false
#| fig-height: 8
#| fig-width: 11
#| fig-align: center
# code from https://drsimonj.svbtle.com/visualising-residuals

model1 <- lm(life_expectancy_years_2011 ~ female_literacy_rate_2011,
                 data = gapm)
regression_points <- augment(model1)
# summary(model1)
# sum(model1$residuals^2)

ggplot(regression_points, 
       aes(x = female_literacy_rate_2011,
                 y = life_expectancy_years_2011)) +
  # geom_segment(aes(
  #   xend = female_literacy_rate_2011, 
  #   yend = .fitted), 
  #   alpha = 1) +
  geom_smooth(method = "lm", se = FALSE, color = "#F14124", size=3) +
  # > Color adjustments made here...
  geom_point(color = "black", size = 4) +  # Color mapped here
  #scale_color_gradient2(low = "#213c96", mid = "white", high = "#F14124") +  # Colors to use here
    #guides(color = "none") +
  geom_point(aes(y = .fitted), shape = 1, size = 4) +
labs(x = "Female literacy rate (%)", 
       y = "Life expectancy (years)",
       title = "Relationship between life expectancy and \n the female literacy rate in 2011") +
    theme(axis.title = element_text(size = 30), 
        axis.text = element_text(size = 25), 
        title = element_text(size = 30))  
```
:::
:::

## *Individual* $i$ residuals in the estimated/fitted model

::: columns
::: {.column width="45%"}
-   **Observed values for each individual** $i$: $Y_i$

    -   Value in the dataset for individual $i$

-   **Fitted value for each individual** $i$: $\widehat{Y}_i$

    -   Value that falls on the best-fit line for a specific $X_i$
    -   If two individuals have the same $X_i$, then they have the same
        $\widehat{Y}_i$

::: hl3
-   **Residual for each individual:**
    $\widehat\epsilon_i = Y_i - \widehat{Y}_i$

    -   Difference between the observed and fitted value
:::
:::

::: {.column width="55%"}
```{r}
#| message: false
#| echo: false
#| fig-height: 8
#| fig-width: 11
#| fig-align: center
# code from https://drsimonj.svbtle.com/visualising-residuals

model1 <- lm(life_expectancy_years_2011 ~ female_literacy_rate_2011,
                 data = gapm)
regression_points <- augment(model1)
# summary(model1)
# sum(model1$residuals^2)

ggplot(regression_points, 
       aes(x = female_literacy_rate_2011,
                 y = life_expectancy_years_2011)) +
  geom_segment(aes(
    xend = female_literacy_rate_2011, 
    yend = .fitted), 
    alpha = 1, 
    color = "#4FADF3", 
    size = 2) +
  geom_smooth(method = "lm", se = FALSE, color = "#F14124", size=3) +
  # > Color adjustments made here...
  geom_point(color = "black", size = 4) +  # Color mapped here
  #scale_color_gradient2(low = "#213c96", mid = "white", high = "#F14124") +  # Colors to use here
    #guides(color = "none") +
  geom_point(aes(y = .fitted), shape = 1, size = 4) +
labs(x = "Female literacy rate (%)", 
       y = "Life expectancy (years)",
       title = "Relationship between life expectancy and \n the female literacy rate in 2011") +
    theme(axis.title = element_text(size = 30), 
        axis.text = element_text(size = 25), 
        title = element_text(size = 30))  
```
:::
:::

## Poll Everywhere Question 4

## So what do we do with the residuals?

-   We want to **minimize the residuals**

    -   Aka minimize the difference between the observed $Y$ value and
        the estimated expected response given the predictor (
        $\widehat{E}[Y|X]$ )

-   **We can use ordinary least squares (OLS) to do this in linear
    regression!**

-   Idea behind this: reduce the total error between the fitted line and
    the observed point (error between is called residuals)

    -   Vague use of total error: more precisely, we want to **reduce
        the sum of squared errors**
    -   Think back to my R Shiny app!
    -   We need to mathematically define this!

 

 

-   Note: there are other ways to estimate the best-fit line!!

    -   Example: Maximum likelihood estimation

# Learning Objectives

1.  Identify the aims of your research and see how they align with the
    intended purpose of simple linear regression

2.  Identify the simple linear regression model and define statistics
    language for key notation

3.  Illustrate how ordinary least squares (OLS) finds the best model
    parameter estimates

::: lob
4.  Solve the optimal coefficient estimates for simple linear regression
    using OLS
:::

5.  Apply OLS in R for simple linear regression of real data

## Setting up for ordinary least squares

::: columns
::: {.column width="75%"}
-   Sum of Squared Errors (SSE)

$$ \begin{aligned}
SSE & = \displaystyle\sum^n_{i=1} \widehat\epsilon_i^2 \\
SSE & = \displaystyle\sum^n_{i=1} (Y_i - \widehat{Y}_i)^2 \\
SSE & = \displaystyle\sum^n_{i=1} (Y_i - (\widehat{\beta}_0+\widehat{\beta}_1X_i))^2 \\
SSE & = \displaystyle\sum^n_{i=1} (Y_i - \widehat{\beta}_0-\widehat{\beta}_1X_i)^2
\end{aligned}$$
:::

::: {.column width="25%"}
::: fact
::: fact-title
Things to use
:::

::: fact-cont
-   $\widehat\epsilon_i = Y_i - \widehat{Y}_i$

-   $\widehat{Y}_i = \widehat\beta_0 + \widehat\beta_1X_i$
:::
:::
:::
:::

::: hl
Then we want to find the estimated coefficient values that minimize the
SSE!
:::

## Steps to estimate coefficients using OLS

1.  Set up SSE (previous slide)

2.  Minimize SSE with respect to coefficient estimates

    -   Need to solve a system of equations

3.  Compute derivative of SSE wrt $\widehat\beta_0$

4.  Set derivative of SSE wrt $\widehat\beta_0 = 0$

5.  Compute derivative of SSE wrt $\widehat\beta_1$

6.  Set derivative of SSE wrt $\widehat\beta_1 = 0$

7.  Substitute $\widehat\beta_1$ back into $\widehat\beta_0$

## 2. Minimize SSE with respect to coefficients

-   Want to minimize with respect to (wrt) the potential coefficient
    estimates ( $\widehat\beta_0$ and $\widehat\beta_1$)

-   Take derivative of SSE wrt $\widehat\beta_0$ and $\widehat\beta_1$
    and set equal to zero to find minimum SSE

$$
\dfrac{\partial SSE}{\partial \widehat\beta_0} = 0 \text{ and } \dfrac{\partial SSE}{\partial \widehat\beta_1} = 0
$$

-   Solve the above system of equations in steps 3-6

## 3. Compute derivative of SSE wrt $\widehat\beta_0$

::: columns
::: {.column width="80%"}
$$
SSE = \displaystyle\sum^n_{i=1} (Y_i - \widehat{\beta}_0-\widehat{\beta}_1X_i)^2
$$

$$\begin{aligned}
\frac{\partial SSE}{\partial{\widehat{\beta}}_0}& =\frac{\partial\sum_{i=1}^{n}\left(Y_i-{\widehat{\beta}}_0-{\widehat{\beta}}_1X_i\right)^2}{\partial{\widehat{\beta}}_0}=
\sum_{i=1}^{n}\frac{{\partial\left(Y_i-{\widehat{\beta}}_0-{\widehat{\beta}}_1X_i\right)}^2}{\partial{\widehat{\beta}}_0} \\
& =\sum_{i=1}^{n}{2\left(Y_i-{\widehat{\beta}}_0-{\widehat{\beta}}_1X_i\right)\left(-1\right)}=\sum_{i=1}^{n}{-2\left(Y_i-{\widehat{\beta}}_0-{\widehat{\beta}}_1X_i\right)} \\
\frac{\partial SSE}{\partial{\widehat{\beta}}_0} & = -2\sum_{i=1}^{n}\left(Y_i-{\widehat{\beta}}_0-{\widehat{\beta}}_1X_i\right)
\end{aligned}$$
:::

::: {.column width="20%"}
::: fact
::: fact-title
Things to use
:::

::: fact-cont
-   Derivative rule: derivative of sum is sum of derivative

-   Derivative rule: chain rule
:::
:::
:::
:::

## 4. Set derivative of SSE wrt $\widehat\beta_0 = 0$

::: columns
::: {.column width="75%"}
$$\begin{aligned}
\frac{\partial SSE}{\partial{\widehat{\beta}}_0} & =0 \\ -2\sum_{i=1}^{n}\left(Y_i-{\widehat{\beta}}_0-{\widehat{\beta}}_1X_i\right) & =0 \\
\sum_{i=1}^{n}\left(Y_i-{\widehat{\beta}}_0-{\widehat{\beta}}_1X_i\right) & =0 \\ \sum_{i=1}^{n}Y_i-n{\widehat{\beta}}_0-{\widehat{\beta}}_1\sum_{i=1}^{n}X_i & =0 \\
\frac{1}{n}\sum_{i=1}^{n}Y_i-{\widehat{\beta}}_0-{\widehat{\beta}}_1\frac{1}{n}\sum_{i=1}^{n}X_i & =0 \\ 
\overline{Y}-{\widehat{\beta}}_0-{\widehat{\beta}}_1\overline{X} & =0 \\
{\widehat{\beta}}_0 & =\overline{Y}-{\widehat{\beta}}_1\overline{X}
\end{aligned}$$
:::

::: {.column width="25%"}
::: fact
::: fact-title
Things to use
:::

::: fact-cont
-   $\overline{Y}=\frac{1}{n}\sum_{i=1}^{n}Y_i$
-   $\overline{X}=\frac{1}{n}\sum_{i=1}^{n}X_i$
:::
:::
:::
:::

## 5. Compute derivative of SSE wrt $\widehat\beta_1$

::: columns
::: {.column width="80%"}
$$
SSE = \displaystyle\sum^n_{i=1} (Y_i - \widehat{\beta}_0-\widehat{\beta}_1X_i)^2
$$

$$\begin{aligned}
\frac{\partial SSE}{\partial{\widehat{\beta}}_1}& =\frac{\partial\sum_{i=1}^{n}{(Y_i-{\widehat{\beta}}_0-{\widehat{\beta}}_1X_i)}^2}{\partial{\widehat{\beta}}_1}=\sum_{i=1}^{n}\frac{{\partial(Y_i-{\widehat{\beta}}_0-{\widehat{\beta}}_1X_i)}^2}{\partial{\widehat{\beta}}_1} \\
&=\sum_{i=1}^{n}{2\left(Y_i-{\widehat{\beta}}_0-{\widehat{\beta}}_1X_i\right)(-X_i)}=\sum_{i=1}^{n}{-2X_i\left(Y_i-{\widehat{\beta}}_0-{\widehat{\beta}}_1X_i\right)} \\ &=-2\sum_{i=1}^{n}{X_i\left(Y_i-{\widehat{\beta}}_0-{\widehat{\beta}}_1X_i\right)}
\end{aligned}$$
:::

::: {.column width="20%"}
::: fact
::: fact-title
Things to use
:::

::: fact-cont
-   Derivative rule: derivative of sum is sum of derivative

-   Derivative rule: chain rule
:::
:::
:::
:::

## 6. Set derivative of SSE wrt $\widehat\beta_1 = 0$

::: columns
::: {.column width="70%"}
$$\begin{aligned}
\frac{\partial SSE}{\partial{\widehat{\beta}}_1} & =0 \\ \sum_{i=1}^{n}\left({X_iY}_i-{\widehat{\beta}}_0X_i-{\widehat{\beta}}_1{X_i}^2\right)&=0 \\
\sum_{i=1}^{n}{X_iY_i}-\sum_{i=1}^{n}{X_i{\widehat{\beta}}_0}-\sum_{i=1}^{n}{{X_i}^2{\widehat{\beta}}_1}&=0 \\
\sum_{i=1}^{n}{X_iY_i}-\sum_{i=1}^{n}{X_i\left(\overline{Y}-{\widehat{\beta}}_1\overline{X}\right)}-\sum_{i=1}^{n}{{X_i}^2{\widehat{\beta}}_1} &=0 \\
\sum_{i=1}^{n}{X_iY_i}-\sum_{i=1}^{n}{X_i\overline{Y}}+\sum_{i=1}^{n}{{\widehat{\beta}}_1X_i\overline{X}}-\sum_{i=1}^{n}{{X_i}^2{\widehat{\beta}}_1} &=0 \\
\sum_{i=1}^{n}{X_i(Y_i-\overline{Y})}+\sum_{i=1}^{n}{({\widehat{\beta}}_1X_i\overline{X}}-{X_i}^2{\widehat{\beta}}_1) &=0 \\
\sum_{i=1}^{n}{X_i(Y_i-\overline{Y})}+{\widehat{\beta}}_1\sum_{i=1}^{n}{X_i(\overline{X}}-X_i) &=0 \\
\end{aligned}$$
:::

::: {.column width="30%"}
::: fact
::: fact-title
Things to use
:::

::: fact-cont
-   ${\widehat{\beta}}_0=\overline{Y}-{\widehat{\beta}}_1\overline{X}$
-   $\overline{Y}=\frac{1}{n}\sum_{i=1}^{n}Y_i$
-   $\overline{X}=\frac{1}{n}\sum_{i=1}^{n}X_i$
:::
:::

         

 

::: heq
$${\widehat{\beta}}_1 =\frac{\sum_{i=1}^{n}{X_i(Y_i-\overline{Y})}}{\sum_{i=1}^{n}{X_i(}X_i-\overline{X})}$$
:::
:::
:::

## 7. Substitute $\widehat\beta_1$ back into $\widehat\beta_0$

### Final coefficient estimates for SLR

::: columns
::: {.column width="50%"}
::: proof1
::: proof-title
Coefficient estimate for $\widehat\beta_1$
:::

::: proof-cont
$${\widehat{\beta}}_1 =\frac{\sum_{i=1}^{n}{X_i(Y_i-\overline{Y})}}{\sum_{i=1}^{n}{X_i(}X_i-\overline{X})}$$
:::
:::
:::

::: {.column width="50%"}
::: fact
::: fact-title
Coefficient estimate for $\widehat\beta_0$
:::

::: fact-cont
$$\begin{aligned}
{\widehat{\beta}}_0 & =\overline{Y}-{\widehat{\beta}}_1\overline{X} \\
{\widehat{\beta}}_0 & = \overline{Y} - \frac{\sum_{i=1}^{n}{X_i(Y_i-\overline{Y})}}{\sum_{i=1}^{n}{X_i(}X_i-\overline{X})} \overline{X} \\
\end{aligned}$$
:::
:::
:::
:::

## Poll Everywhere Question 5

## Do I need to do all that work every time??

![](03_SLR_01/hoopla.jpeg){fig-align="center"}

## Regression in R: `lm()`

-   Let's discuss the syntax of this function

```{r}
#| out-height: 800px 

model1 <- lm(life_expectancy_years_2011 ~ female_literacy_rate_2011,
                 data = gapm)
```

## Regression in R: `lm()` + `summary()`

```{r}
#| out-height: 800px 

model1 <- lm(life_expectancy_years_2011 ~ female_literacy_rate_2011,
                 data = gapm)
summary(model1)
```

![](03_SLR_01/summary.png){fig-align="center"}

## Regression in R: `lm()` + `tidy()`

 

```{r}
tidy(model1) %>% 
  gt() %>% 
  tab_options(table.font.size = 45)
```

 

-   Regression equation for our model (which we saw a looong time ago):

::: heq
$$\widehat{\text{life expectancy}} =  50.9 + 0.232\cdot\text{female literacy rate}$$
:::

## How do we interpret the coefficients?

::: heq
$$\widehat{\text{life expectancy}} =  50.9 + 0.232\cdot\text{female literacy rate}$$
:::

-   **Intercept**
    -   The expected outcome for the $Y$-variable when the $X$-variable
        is 0
    -   **Example:** The expected/average life expectancy is 50.9 years
        for a country with 0% female literacy.
-   **Slope**
    -   For every increase of 1 unit in the $X$-variable, there is an
        expected increase of, on average, $\widehat\beta_1$ units in the
        $Y$-variable.

    -   We only say that there is an expected increase and not
        necessarily a causal increase.

    -   **Example:** For every 1 percent increase in the female literacy
        rate, the expected/average life expectancy increases, on
        average, 0.232 years.

## Next time

-   Inference of our estimated coefficients

-   Inference of estimated expected $Y$ given $X$

-   Prediction

-   Hypothesis testing!
