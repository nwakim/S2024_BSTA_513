{
  "hash": "97087c9166c401f2e7a1455ae915bfb5",
  "result": {
    "markdown": "---\ntitle: \"Lesson 14: Model Diagnostics\"\nauthor: \"Nicky Wakim\"\ntitle-slide-attributes:\n    data-background-color: \"#C2352F\"\ndate: \"05/20/2024\"\nformat: \n  revealjs:\n    theme: \"../simple_NW.scss\"\n    chalkboard: true\n    slide-number: true\n    show-slide-number: all\n    width: 1955\n    height: 1100\n    footer: \"Lesson 14: Model Diagnostics\"\n    html-math-method: mathjax\n    highlight-style: ayu\nexecute:\n  echo: true\n  freeze: auto  # re-render only when source changes\neditor_options: \n  chunk_output_type: console\n---\n\n::: {.cell}\n\n:::\n\n\n\n# Learning Objectives\n\n1. Understand the components of calculations for logistic regression diagnostics\n\n2. Plot and determine observations where regression does not fit well or are influential using specific diagnostic values\n\n\n::: {.cell}\n<style type=\"text/css\">\n.reveal code {\n  max-height: 80% !important;\n}\n</style>\n:::\n\n\n\n## Review of model assessment so far (1/2)\n\n-   Overall measurements of fit\n\n    -   How well does the fitted logistic regression model predict the outcome?\n    \n    -   Different ways to measure the answer to this question\n    \n| Measure of fit       | Hypothesis tested?     | Equation                                                                                                            | R code                     |\n|----------------|----------------|------------------------|----------------|\n| Pearson residual     | Yes                    | $X^2=\\sum_{j=1}^{J}{r\\left(Y_j,{\\hat{\\pi}}_j\\right)^2}$                                                             | Not given                  |\n| Hosmer-Lemeshow test | Yes                    | $\\hat{C}=\\sum_{k=1}^{g}\\frac{\\left(o_k-n_k^\\prime{\\bar{\\pi}}_k\\right)^2}{n_k^\\prime{\\bar{\\pi}}_k(1-{\\bar{\\pi}}_k)}$ | `hoslem.test()`            |\n| AUC-ROC              | Kinda                  | Not given                                                                                                           | `auc(observed, predicted)` |\n| AIC                  | Only to compare models | $AIC = -2 \\cdot \\text{log-likelihood} + 2q$                                                                         | `AIC(model_name)`          |\n| BIC                  | Only to compare models | $BIC = -2 \\cdot \\text{log-likelihood} + q\\text{log}(n)$                                                             | `BIC(model_name)`          |\n\n## Review of model assessment so far (2/2)\n\n\n-   Numerical problems\n\n    -   Assess pre and post model fit\n    -   Numerical problems often depend on the final model (which variables and interactions are included)\n    \n-   Different numerical problems to look out for\n\n    -   Zero cell count\n    -   Complete separation\n    -   Multicollinearity\n    \n## Today\n\n-   We now use model diagnostics to identify any observations that the model does not fit well\n\n# Learning Objectives\n\n::: lob\n1. Understand the components of calculations for logistic regression diagnostics\n:::\n\n2. Plot and determine observations where regression does not fit well or are influential using specific diagnostic values\n\n## Review of Number of Covariate Patterns\n\n-   Covariate patterns are the **unique covariate combinations** that are observed\n\n \n\n-   **For example:** model contains two binary covariates (history of fracture and smoking status), there will be **4 unique combination of these factors**\n\n    -   This model has **4 covariate patterns**\n    -   Subjects can be divided into 4 groups based on the covariates’ values\n \n \n   \n-   When we have **continuous covariates**, the number of covariate patterns will be close to the **number of individuals in the dataset**\n\n## From overall measure to diagnostics\n\n-   Now we need to investigate diagnostics looking at individual data or covariate pattern data\n\n    -   Make sure the overall measure has not been influenced by certain observations\n\n \n\n-   The key quantities from logistic regression diagnostics are the components of “residual sum-of-squares”\n\n    -   The same idea as in the linear regression\n\n    -   Assessed for **each covariate pattern** $j$, by computing standardized Pearson residuals and Deviance residuals\n    \n        -   Standardization using $h_j$, the leverage values\n\n## Hat Matrix and Leverage Values: Linear regression\n\n-   We have learned “hat” matrix and leverage values from linear regression diagnostics\n\n \n\n-   In linear regression, the hat matrix projects the outcome variable onto the covariate space: \n    \n     \n    -   $H=X\\left(X^\\prime X\\right)^{-1}X^\\prime$ and $\\hat{y}=Hy$\n\n     \n\n    -   The linear regression residuals is thus $y - \\widehat{y}$, or $(I-H)y$\n\n \n\n-   The leverage is just the diagonal elements of the hat matrix, which is proportional to the distance of $x_j$ to the mean of the data $\\overline{x}$\n\n\n## Hat Matrix and Leverage Values: Logistic regression\n\n-   In logistic regression model, the hat matrix is: $$H=V^\\frac{1}{2}X\\left(X^\\prime V\\ X\\right)^{-1}X^\\prime V^\\frac{1}{2}$$\n\n-   The leverage is $$h_j=m_j\\cdot\\hat{\\pi}\\left(\\textbf{x}_j\\right)\\left[1-\\hat{\\pi}\\left(\\textbf{x}_j\\right)\\right]\\textbf{x}_j^\\prime\\left(\\textbf{X}^\\prime\\textbf{VX}\\right)^{-1}\\textbf{x}_j=v_j\\cdot b_j$$\n\n    -   $b$:    weighted distance of $x_j$ from $\\overline{x}$\n    -   $v_j$:   model based estimator of the variance of $y_j$\n\n          -   $v_j=m_j\\cdot\\hat{\\pi}\\left(\\textbf{x}_j\\right)\\left[1-\\hat{\\pi}\\left(\\textbf{x}_j\\right)\\right]$\n\n-   $h_j$ **reflects the relative influence of each covariate pattern on the model’s fit**\n\n## Poll Everywhere Question 1\n\n## Poll Everywhere Question 2\n\n## Diagnostic Statistics Computation (1/2)\n\n-   Two diagnostic statistics computation approach\n\n    -   **Approach 1**: computed by covariate pattern\n\n        -   Recommendation of Hosmer-Lemeshow textbook\n        -   R uses this approach\n        -   Identify outliers as group that shares the same covariate values (in the same covariate pattern)\n\n    -   **Approach 2**: individual observation approach\n\n        -   SAS uses this approach\n        -   Identify outliers as individual\n\n-   Why prefer covariate patterns approach?\n\n    -   When the number of covariate pattern is much smaller than n, there is risk that we may fail to identify influential and/or poorly fit covariate patterns using individual based on residual\n\n## Diagnostic Statistics Computation (2/2)\n\nConsider a covariate pattern with $m_j$ subjects, all did not have event (some $y_i = 0$). So the estimated logistic probability is $\\widehat\\pi_j$\n\n-   Pearson residual computed by individual $$r_i=-\\sqrt{\\frac{{\\hat{\\pi}}_j}{(1-{\\hat{\\pi}}_j)}}$$\n\n-   Pearson residual computed by covariate pattern $$r_i=-\\sqrt{m_j}\\sqrt{\\frac{{\\hat{\\pi}}_j}{(1-{\\hat{\\pi}}_j)}}$$\n\n-   **Difference between aboveresiduals will be large if $m_j$ is large**: usually a problem if less covariate patterns\n\n    -   Residual from covariate pattern will identify poorly fit covariate patterns\n\n\n## Diagnostics of Logistic Regression \n\n-   Model diagnostics of logistic regression can be assessed by checking how influential a covariate pattern is:\n\n     \n\n    -   Look at [change in residuals if a covariate pattern is excluded]{style=\"color:#70AD47\"}\n\n        -   Standardized Pearson residual\n        -   Standardized Deviance residual\n    \n     \n    \n    -   Look at [change in coefficients if a covariate pattern is excluded]{style=\"color:#5B9BD5\"}\n\n\n## Change of Standardized Residuals\n\n-   Change in **standardized Pearson Chi-square statistic** due to deletion of subjects with covariate pattern $x_j$: $$\\Delta X_j^2 = r_{sj}^2 = \\dfrac{r_j^2}{1-h_j}$$\n\n-   *Don’t need to know this*: change in **standardized deviance statistic** due to deletion of subjects with covariate pattern $x_j$: $$\\Delta D_j = \\dfrac{d_j^2}{1-h_j}$$\n\n-   Refer to *Lesson 12: Assessing Model Fit* for expression of Pearson residual\n\n\n## Change of Estimated Coefficients\n\n-   Change in estimated coefficients due to deletion of subjects with covariate pattern $x_j$: $$\\Delta \\widehat{\\beta}_j = \\dfrac{r_j^2 h_j}{(1-h_j)^2}$$\n\n \n\n-   This is the logistic regression analog of Cook’s influence statistic (in linear regression)\n\n\n# 10 minute break\n\n# Learning Objectives\n\n1. Understand the components of calculations for logistic regression diagnostics\n\n::: lob\n2. Plot and determine observations where regression does not fit well or are influential using specific diagnostic values\n:::\n\n## Visual Assessment for Diagnostics of Logistic Regression (I)\n\n-   In logistic regression, we mainly rely on graphical methods\n\n    -   Because the distribution of diagnostic measures under null hypothesis (that the model fits) is only known in certain limited settings\n\n \n\n-   Four plots for analysis of diagnostics in logistic regression:\n\n    -   $\\Delta X_j^2$ vs. ${\\hat{\\pi}}_j$\n\t  -   $\\Delta D_j$ vs. ${\\hat{\\pi}}_j$\n\t  -   $\\Delta\\widehat{\\beta}_j$ vs. ${\\hat{\\pi}}_j$\n\t  -   $h_j$ vs. ${\\hat{\\pi}}_j$\n\n## Recall the model we fit: GLOW Study with interactions\n\n-   **Outcome variable:** any fracture in the first year of follow up (FRACTURE: 0 or 1)\n\n-   **Risk factor/variable of interest:** history of prior fracture (PRIORFRAC: 0 or 1)\n\n-   **Potential confounder or effect modifier:** age (AGE, a continuous variable)\n\n-   Fitted model with interactions: $$\\begin{aligned} \\text{logit}\\left(\\widehat\\pi(\\mathbf{X})\\right) & = \\widehat\\beta_0 &+ &\\widehat\\beta_1\\cdot I(\\text{PF}) & + &\\widehat\\beta_2\\cdot Age& + &\\widehat\\beta_3 \\cdot I(\\text{PF}) \\cdot Age \\\\  \n    \\text{logit}\\left(\\widehat\\pi(\\mathbf{X})\\right) & = -1.376 &+ &1.002\\cdot I(\\text{PF})& + &0.063\\cdot Age& -&0.057 \\cdot I(\\text{PF}) \\cdot Age\n    \\end{aligned}$$\n\n \n    \n-   Lesson 12: determined the overall fit of this model\n-   Today: determine the if any observations/covariate patterns that model does not fit well\n\n## How do we get these values in R?\n\n-   Nice function in the R script `Logistic_Dx_Functions.R` \n\n    -   Highly suggest you save this R script for future use!!\n\n::: {.cell}\n\n```{.r .cell-code}\nsource(here(\"lectures\", \"14_Model_diagnostics\", \"Logistic_Dx_Functions.R\"))\ndx_glow = dx(glow_m3)\nglimpse(dx_glow)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 71\nColumns: 16\n$ `(Intercept)`        <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ priorfracYes         <dbl> 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0…\n$ age_c                <dbl> 1, -7, 7, -2, 10, 20, 1, -2, 2, 8, 18, -8, 11, 10…\n$ `priorfracYes:age_c` <dbl> 1, 0, 7, 0, 10, 0, 0, -2, 2, 0, 0, 0, 0, 0, -3, 0…\n$ y                    <dbl> 2, 2, 3, 2, 2, 1, 3, 3, 1, 5, 1, 3, 2, 1, 1, 4, 1…\n$ P                    <dbl> 0.4088354, 0.1402159, 0.4162991, 0.1822879, 0.420…\n$ n                    <int> 5, 15, 7, 10, 5, 2, 12, 8, 3, 15, 2, 18, 7, 4, 3,…\n$ yhat                 <dbl> 2.0441770, 2.1032389, 2.9140936, 1.8228786, 2.100…\n$ Pr                   <dbl> -0.04018670, -0.07677228, 0.06586860, 0.14507476,…\n$ dr                   <dbl> -0.04023255, -0.07730975, 0.06577949, 0.14332786,…\n$ h                    <dbl> 0.008844090, 0.003811004, 0.008725450, 0.00290085…\n$ sPr                  <dbl> -0.04036559, -0.07691899, 0.06615786, 0.14528564,…\n$ sdr                  <dbl> -0.04041165, -0.07745749, 0.06606836, 0.14353620,…\n$ dChisq               <dbl> 0.001629381, 0.005916530, 0.004376863, 0.02110791…\n$ dDev                 <dbl> 0.001633102, 0.005999662, 0.004365028, 0.02060264…\n$ dBhat                <dbl> 1.453897e-05, 2.263418e-05, 3.852626e-05, 6.14091…\n```\n:::\n:::\n\n\n## Key to the values\n\n::: columns\n::: column\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(dx_glow)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"(Intercept)\"        \"priorfracYes\"       \"age_c\"             \n [4] \"priorfracYes:age_c\" \"y\"                  \"P\"                 \n [7] \"n\"                  \"yhat\"               \"Pr\"                \n[10] \"dr\"                 \"h\"                  \"sPr\"               \n[13] \"sdr\"                \"dChisq\"             \"dDev\"              \n[16] \"dBhat\"             \n```\n:::\n:::\n\n:::\n\n::: column\nFor each covariate pattern (which is each row) ...\n\n-   `y`: Number of events\n-   `P`: Estimated probability of events\n-   `n`: Number of observations\n-   `yhat`: Estimated number of events \n-   `Pr`: Pearson residual\n-   `dr`: Deviance\n-   `h`: leverage\n-   `sPr`: Standardized Pearson residual\n-   `sdr`: Standardized deviance\n-   `dChisq`: Change in standardized Pearson residual\n-   `dDev`: Change in standardized deviance\n-   `dBhat`: Change in coefficient estimates\n\n:::\n:::\n\n## Poll Everywhere Question 3\n\n## Visual Assessment for Diagnostics of Logistic Regression\n\n-   The plots allow us to identify those covariate patterns that are…\n\n    -   Poorly fit \n\n        -   Large values of $\\Delta X_j^2$ (and/or $\\Delta D_j$ if we looked at those)\n\n    -   Influential on estimated coefficients \n\n        -   Large values of $\\Delta\\widehat{\\beta}_j$\n        \n-   If you are interested to look at the contribution of leverage (ℎ_𝑗) to the values of the diagnostic statistic, you may also look at plots of:\n\n    -   $\\Delta X_j^2$ vs. ${\\hat{\\pi}}_j$\n\t  -   $\\Delta D_j$ vs. ${\\hat{\\pi}}_j$\n\t  -   $\\Delta\\widehat{\\beta}_j$ vs. ${\\hat{\\pi}}_j$\n\n## GLOW study: standardized Pearson residuals\n\n::: columns\n::: column\n-   Generally, the points that curve from top left to bottom right of plot correspond to covariate patterns with $y_j = 1$\n\n    -   Opposite corresponds to $y_j = 0$\n:::\n\n::: column\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"To make the plot\"}\nggplot(dx_glow) + geom_point(aes(x=P, y=dChisq), size = 3) + \n  xlab(\"Estimated/Predicted Probability of Fracture\") +\n  ylab(\"Change in Std. Pearson Residual\") +\n  theme(text = element_text(size = 26))\n```\n\n::: {.cell-output-display}\n![](14_Model_diagnostics_files/figure-revealjs/unnamed-chunk-5-1.png){width=768}\n:::\n:::\n\n:::\n:::\n\n## GLOW study: standardized Pearson residuals\n\n::: columns\n::: column\n-   Generally, the points that curve from top left to bottom right of plot correspond to covariate patterns with $y_j = 1$\n\n    -   Opposite corresponds to $y_j = 0$\n    \n-   Points in the top left or top right corners identify the covariate patterns that are poorly fit \n\n-   We may use 4 as a crude approximation to the upper 95th percentile for $\\Delta X_j^2$\n\n    -   95th percentile of chi-squared distribution is 3.84\n\n:::\n\n::: column\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"To make the plot\"}\nggplot(dx_glow) + geom_point(aes(x=P, y=dChisq), size = 3) + \n  xlab(\"Estimated/Predicted Probability of Fracture\") +\n  ylab(\"Change in Std. Pearson Residual\") +\n  theme(text = element_text(size = 26))\n```\n\n::: {.cell-output-display}\n![](14_Model_diagnostics_files/figure-revealjs/unnamed-chunk-6-1.png){width=768}\n:::\n:::\n\n:::\n:::\n\n## GLOW study: standardized Pearson residuals\n\n::: columns\n::: column\n-   Generally, the points that curve from top left to bottom right of plot correspond to covariate patterns with $y_j = 1$\n\n    -   Opposite corresponds to $y_j = 0$\n    \n-   Points in the top left or top right corners identify the covariate patterns that are poorly fit \n\n-   We may use 4 as a crude approximation to the upper 95th percentile for $\\Delta X_j^2$\n\n    -   95th percentile of chi-squared distribution is 3.84\n    \n-   Which point is over 4?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndx_glow %>% filter(dChisq > 4) %>% select(priorfracYes, age_c, P, dChisq)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   priorfracYes age_c         P   dChisq\n          <num> <num>     <num>    <num>\n1:            0    -4 0.1643855 4.413937\n```\n:::\n:::\n\n\n:::\n\n::: column\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"To make the plot\"}\nggplot(dx_glow) + geom_point(aes(x=P, y=dChisq), size = 3) + \n  xlab(\"Estimated/Predicted Probability of Fracture\") +\n  ylab(\"Change in Std. Pearson Residual\") +\n  theme(text = element_text(size = 26))\n```\n\n::: {.cell-output-display}\n![](14_Model_diagnostics_files/figure-revealjs/unnamed-chunk-8-1.png){width=768}\n:::\n:::\n\n:::\n:::\n\n## GLOW study: standardized Deviance residuals\n\n::: columns\n::: column\n-   Same investigation as Pearson residuals\n\n-   Points in the top left or top right corners identify the covariate patterns that are poorly fit \n\n-   Use 4 as a crude approximation to the upper 95th percentile \n\n-   Which point is over 4?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndx_glow %>% filter(dDev > 4) %>% \n  select(priorfracYes, age_c, P, dDev)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   priorfracYes age_c         P     dDev\n          <num> <num>     <num>    <num>\n1:            0   -10 0.1190935 4.841217\n2:            0     7 0.2812460 5.313540\n3:            1     6 0.4150524 4.325664\n```\n:::\n:::\n\n\n:::\n\n::: column\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"To make the plot\"}\nggplot(dx_glow) + geom_point(aes(x=P, y=dDev), size = 3) + \n  xlab(\"Estimated/Predicted Probability of Fracture\") +\n  ylab(\"Change in Std. Deviance Residual\") +\n  theme(text = element_text(size = 26))\n```\n\n::: {.cell-output-display}\n![](14_Model_diagnostics_files/figure-revealjs/unnamed-chunk-10-1.png){width=768}\n:::\n:::\n\n:::\n:::\n\n## GLOW Study: Change in coefficient estimates\n\n::: columns\n::: column\n-   Book recommends flagging certain covariate patterns if change in coefficient estimates are greater than 1 \n\n-   All values of $\\Delta\\widehat{\\beta}_j$ are below 0.09\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndx_glow %>% filter(dBhat > 0.075) %>% \n  select(priorfracYes, age_c, P, dBhat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   priorfracYes age_c         P      dBhat\n          <num> <num>     <num>      <num>\n1:            1    20 0.4325984 0.08926472\n```\n:::\n:::\n\n\n:::\n\n::: column\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"To make the plot\"}\nggplot(dx_glow) + geom_point(aes(x=P, y=dBhat), size = 3) + \n  xlab(\"Estimated/Predicted Probability of Fracture\") +\n  ylab(\"Change in Coefficient Estimates\") +\n  theme(text = element_text(size = 26))\n```\n\n::: {.cell-output-display}\n![](14_Model_diagnostics_files/figure-revealjs/unnamed-chunk-12-1.png){width=768}\n:::\n:::\n\n:::\n:::\n\n## GLOW Study: Leverage\n\n::: columns\n::: column\n\n-   We can use the same rule as linear regression: $h_j > 3p/n$ \n\n    -   Flag these points as high leverage\n    \n-   Points with high leverage\n\n    -   $p=4$: four regression coefficients\n    -   $n=500$: 500 total observations\n    -   Look for $h_j > 3p/n = 3\\cdot4 /500 = 0.024$\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndx_glow %>% filter(h > 3*4/500) %>% \n  select(priorfracYes, age_c, P, h) %>% \n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   priorfracYes age_c         P          h\n          <num> <num>     <num>      <num>\n1:            0    20 0.4686423 0.02688958\n2:            1   -12 0.3928116 0.03186122\n3:            0    19 0.4531105 0.02451738\n4:            1   -11 0.3940365 0.02900675\n5:            1    19 0.4313389 0.02895824\n6:            1    18 0.4300804 0.02621708\n```\n:::\n:::\n\n\n:::\n\n::: column\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"To make the plot\"}\nggplot(dx_glow) + geom_point(aes(x=P, y=h), size=3) + \n  xlab(\"Estimated/Predicted Probability of Fracture\") +\n  ylab(\"Leverage\") +\n  theme(text = element_text(size = 26))\n```\n\n::: {.cell-output-display}\n![](14_Model_diagnostics_files/figure-revealjs/unnamed-chunk-14-1.png){width=768}\n:::\n:::\n\n:::\n:::\n\n## Find Out the “Influential” Observation From the Data Set \n\n::: columns\n::: {.column width=\"30%\"}\n\n-   We identified covariate patterns that may be poorly fit or influential\n\n \n\n-   Let's identify the covariate patterns that were not fit well \n\n:::\n\n::: {.column width=\"70%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\ndx_glow %>% mutate(Cov_patt = 1:nrow(.)) %>%\n  filter(dChisq > 4 | dDev > 4 | dBhat > 1 | \n          h > 3*4/500) %>%\n  select(Cov_patt, y, P, h, dChisq, dDev, dBhat, h) %>%\n  round(., 3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    Cov_patt     y     P     h dChisq  dDev dBhat\n       <num> <num> <num> <num>  <num> <num> <num>\n 1:        6     1 0.469 0.027  0.008 0.008 0.000\n 2:       22     1 0.393 0.032  0.046 0.047 0.002\n 3:       36     1 0.453 0.025  0.178 0.183 0.004\n 4:       43     0 0.119 0.005  2.581 4.841 0.012\n 5:       45     6 0.164 0.003  4.414 3.554 0.014\n 6:       47     0 0.281 0.006  3.148 5.314 0.018\n 7:       48     0 0.394 0.029  0.670 1.032 0.020\n 8:       49     2 0.431 0.029  0.698 0.693 0.021\n 9:       50     0 0.430 0.026  0.775 1.155 0.021\n10:       53     0 0.415 0.008  2.862 4.326 0.024\n11:       57     2 0.395 0.026  0.949 0.924 0.026\n12:       63     0 0.484 0.029  0.967 1.364 0.029\n13:       69     0 0.434 0.035  1.588 2.358 0.058\n14:       70     1 0.392 0.035  1.610 1.943 0.058\n15:       71     2 0.433 0.032  2.710 3.462 0.089\n```\n:::\n:::\n\n:::\n:::\n\n## After identifying points\n\n-   Do a data quality check\n\n    -   Unless you have a very good reason to believe the data are not measured correctly, then we leave it in\n    -   Common to do nothing\n    \n \n\n-   If only a few covariate pattern does not fit well ($y_j$ differs from $m_j\\widehat\\pi_j$ ), we are not too worried\n\n    -   We had 15 out of 71 covariate patterns\n    \n \n\n-   If quite a few covariate patterns do not fit well, potential reasons can be considered:\n\n    -   The link used in logistic regression model is not appropriate for outcome\n\n        -   This is usually unlikely, since logistic regression model is very flexible (think back to why we transformed our outcome from binary form)\n\n    -   One or more important covariates missing in the model\n\n        -   At least one of the covariates in the model has been entered in the wrong scale (think age-squared vs. age)\n        \n        \n## How would I report this? (Combining all model assessment)\n\n-   Assuming I have not checked other final models (no other models to compare AIC/BIC or AUC with)\n\n**Methods:** To assess the overall model fit, we calculated the AUC-ROC. We also calculated several model diagnostics including standardized Pearson residual, standardized deviance, change in coefficient estimates, and leverage. We identified covariate patterns with high standardized Pearson residual (greater than 4), standardized deviance (greater than 4), change in coefficient estimates (greater than 1), and leverage (greater than 0.024). \n\n \n\n**Results:** Our final logistic regression model consisted of the outcome, fracture, and predictors including prior fracture, age, and their interaction. The AUC-ROC was 0.68. We identified 11 covariate patterns with high leverage and 4 with high standardized Pearson residual, standardized deviance, or change in coefficient estimates. No identified observations were omitted. \n\n \n\n**Discussion:** \n\n-   AUC-ROC low: Included covariates were pre-determined \n\n-   Influential points were kept in because all observations were within feasible range of the predictors and outcome. (we could try age-sqaured and see if that helps AUC and/or diagnostics)\n\n\n\n",
    "supporting": [
      "14_Model_diagnostics_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}